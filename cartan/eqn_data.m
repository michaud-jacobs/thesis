// Magma code to support the computations in the paper Quadratic points on non-split Cartan modular curves by Philippe Michaud-Jacobs.
// See https://github.com/michaud-jacobs/quad-cartan for all the code files and links to the paper

// The code in this file includes equations for curves and maps.
// The code works on Magma V2.26-10


R<x_1,x_2,x_3,x_4,x_5,x_6,x_7,x_8>:=PolynomialRing(Rationals(),8); 
S<X,Y,Z>:=PolynomialRing(Rationals(),3);   

// Equations for starting model of X_ns(13)
old_eqns :=
[
    x_1^2 - x_1*x_3 - x_1*x_4 - x_1*x_7 + x_1*x_8 + x_2*x_4 + x_2*x_5 + 
        2*x_3*x_4 - 2*x_3*x_5 - x_3*x_8 + 2*x_4*x_5 + x_4*x_7 + x_5*x_8 - x_7^2 
        + x_7*x_8,
    -x_1*x_3 + 2*x_1*x_5 + x_1*x_8 - 2*x_3*x_4 - x_3*x_5 + x_3*x_6 - x_3*x_7 - 
        x_4*x_5 - x_4*x_6 + x_4*x_7 + x_4*x_8 - x_5^2 + x_5*x_6 - 3*x_5*x_8 - 
        x_6*x_7 - 3*x_6*x_8 + x_7^2 - x_8^2,
    -x_1*x_3 + 2*x_1*x_4 + x_1*x_5 - 2*x_1*x_6 + 4*x_1*x_8 + x_2*x_4 + x_2*x_5 -
        x_3*x_4 + x_3*x_6 - x_3*x_7 - x_4^2 + x_4*x_5 - 2*x_4*x_8 + 2*x_5*x_7 + 
        x_5*x_8 - 2*x_6*x_8 + x_7*x_8 - x_8^2,
    x_1*x_3 + x_1*x_4 + x_1*x_5 - 3*x_1*x_6 + x_1*x_7 + 2*x_1*x_8 - x_2*x_3 - 
        x_2*x_4 + x_2*x_5 + x_2*x_6 - x_3^2 - x_3*x_4 - x_3*x_5 + x_3*x_6 - 
        x_3*x_8 - 2*x_4*x_5 - x_4*x_8 + x_5*x_6 + x_5*x_7 + 2*x_6^2 - 2*x_6*x_7 
        + x_7^2 + x_7*x_8 - x_8^2,
    x_1*x_2 - x_1*x_3 + x_1*x_5 + x_1*x_6 - x_1*x_7 + x_1*x_8 + x_2^2 + x_2*x_3 
        - x_2*x_4 - x_2*x_5 - x_2*x_6 + x_3^2 - x_3*x_4 - x_3*x_5 - x_3*x_6 + 
        x_3*x_8 - x_4^2 + x_4*x_5 + 2*x_4*x_6 + x_4*x_7 - 2*x_4*x_8 - x_5^2 + 
        2*x_5*x_6 + x_5*x_7 - 2*x_5*x_8 + x_6*x_7 - x_6*x_8 + x_7*x_8 - x_8^2,
    2*x_1*x_2 + x_1*x_3 - x_1*x_4 + x_1*x_6 - x_1*x_7 - x_1*x_8 + x_2*x_3 - 
        2*x_2*x_4 - x_2*x_5 - x_2*x_6 + x_2*x_7 + x_3^2 - 2*x_3*x_4 - x_3*x_6 - 
        x_3*x_7 + x_4*x_5 + x_4*x_6 + x_4*x_7 + 2*x_4*x_8 + x_5*x_6 - 2*x_5*x_8 
        + x_6*x_7 - x_6*x_8,
    -x_1^2 + x_1*x_2 + 2*x_1*x_3 + x_1*x_5 - x_1*x_6 - x_1*x_7 + 2*x_1*x_8 - 
        x_2^2 - x_2*x_3 + x_2*x_6 + x_2*x_7 + x_2*x_8 - x_3*x_4 - x_3*x_5 - 
        x_3*x_8 - x_4^2 + x_4*x_6 + x_5^2 - x_5*x_6 - x_6*x_7 - x_6*x_8,
    -x_1^2 - x_1*x_2 + x_1*x_5 + 2*x_1*x_6 + x_1*x_7 + x_1*x_8 + x_2*x_3 - 
        x_2*x_4 - x_2*x_5 + x_2*x_7 + x_2*x_8 - x_3*x_5 + x_3*x_6 - x_3*x_7 + 
        x_4*x_5 - x_4*x_6 + x_4*x_7 - x_5^2 + x_5*x_6 + x_5*x_7 - x_5*x_8 - 
        2*x_6*x_8 + x_7*x_8 - x_8^2,
    -2*x_1*x_2 + 2*x_1*x_3 - x_1*x_4 - x_1*x_5 + x_1*x_7 - x_1*x_8 - x_2*x_4 + 
        2*x_2*x_5 + 2*x_2*x_6 + x_2*x_8 - x_3^2 + x_3*x_4 + x_3*x_5 + x_3*x_6 + 
        x_3*x_7 - x_3*x_8 + x_4^2 + x_4*x_5 + x_4*x_7 - x_5^2 - 2*x_5*x_6 - 
        x_5*x_7 + x_5*x_8 - x_6*x_7 + x_6*x_8 - x_7^2 + x_7*x_8,
    -2*x_1*x_3 - x_1*x_4 + x_1*x_5 - x_1*x_7 + 2*x_1*x_8 + x_2^2 + x_2*x_3 - 
        x_2*x_4 - x_2*x_7 + x_3*x_4 + x_3*x_5 + 2*x_3*x_6 - 2*x_3*x_7 + 
        2*x_3*x_8 - x_4^2 + 2*x_4*x_5 + 2*x_4*x_7 - x_4*x_8 - x_5^2 + 2*x_5*x_7 
        - x_5*x_8 + 2*x_6*x_7 - 2*x_6*x_8 + 2*x_7*x_8 - 2*x_8^2,
    -x_1*x_2 + 2*x_1*x_4 - x_1*x_6 + x_1*x_7 + x_1*x_8 - x_2^2 + 2*x_2*x_4 + 
        x_2*x_5 - x_2*x_6 + 2*x_2*x_7 + 2*x_2*x_8 - x_4*x_6 - x_4*x_7 - x_4*x_8 
        + x_5*x_6 + x_5*x_7 + x_5*x_8,
    x_1*x_3 + 2*x_1*x_4 - x_1*x_5 - x_1*x_6 + x_1*x_7 + x_1*x_8 - x_2^2 - 
        x_2*x_3 - x_2*x_4 + x_2*x_5 + x_2*x_6 + x_2*x_7 - 2*x_2*x_8 - x_3^2 + 
        2*x_3*x_5 + x_3*x_6 + x_3*x_7 - x_3*x_8 + x_4*x_5 - x_4*x_6 - x_4*x_7 - 
        x_4*x_8 - x_5*x_6 + x_5*x_7 + 2*x_5*x_8 - x_6*x_7 + x_6*x_8 - x_7^2 + 
        x_7*x_8,
    -x_1^2 + x_1*x_2 + 2*x_1*x_3 - x_1*x_4 + x_1*x_6 - x_1*x_7 - x_2*x_3 - 
        2*x_2*x_4 - 2*x_2*x_5 - x_2*x_7 - x_2*x_8 - x_3^2 - x_3*x_5 + x_3*x_7 - 
        x_3*x_8 + x_4^2 + x_4*x_5 + 2*x_4*x_7 + x_4*x_8 + x_5*x_6 + x_5*x_7 - 
        x_5*x_8 + 2*x_6*x_8 + 2*x_7^2 + 2*x_7*x_8 - 2*x_8^2,
    x_1^2 + 2*x_1*x_2 - x_1*x_3 - x_1*x_4 + x_1*x_6 - x_1*x_8 - x_2^2 + 
        2*x_2*x_3 - 2*x_2*x_5 + x_2*x_7 + 3*x_3^2 - x_3*x_4 - 2*x_3*x_6 - 
        x_3*x_7 - x_4^2 + 3*x_4*x_6 + 2*x_5^2 + x_5*x_6 + x_5*x_7 - 2*x_6^2 - 
        x_6*x_7 + x_6*x_8 - x_7^2 - 2*x_7*x_8 + 2*x_8^2,
    2*x_1^2 - 2*x_1*x_2 + x_1*x_4 + 3*x_1*x_5 - 2*x_1*x_6 - 2*x_1*x_7 - 
        2*x_1*x_8 + x_2^2 - x_2*x_3 - 3*x_2*x_5 - x_2*x_7 - 3*x_3*x_4 + x_3*x_6 
        + x_3*x_8 + x_4^2 + 3*x_4*x_5 - 2*x_4*x_6 + x_4*x_7 + x_4*x_8 + 2*x_5^2 
        - 4*x_5*x_6 - 2*x_5*x_8 + 2*x_6*x_7 + x_7^2 - 2*x_7*x_8 + x_8^2
];


// Equation for X_ns^+(13) 

eqn_X_plus := (-Y-Z)*X^3+(2*Y^2+Z*Y)*X^2+(-Y^3+Z*Y^2-2*(Z^2)*Y+Z^3)*X+(2*Z^2*Y^2-3*Z^3*Y);

// Equations for map rho from old model to X_ns^+(13)

old_rho_eqns := [-3*x_1+2*x_2, -3*x_1+x_2+2*x_4-2*x_5, x_1+x_2+x_4-x_5];

//////////////////////////////////////////////////////////////////////////////////

// Equations for new model of X_ns(13)

new_eqns := 
[
    -2*x_1^2 + x_1*x_2 - 3*x_1*x_3 + x_1*x_4 - 4*x_1*x_5 - x_1*x_7 + 3*x_2^2 + 
        2*x_2*x_3 - x_2*x_4 + 3*x_2*x_5 + x_2*x_7 - x_2*x_8 - x_3^2 - 2*x_3*x_4
        + 2*x_3*x_7 + 5*x_3*x_8 - x_4*x_5 + x_4*x_7 - x_4*x_8 - x_7^2 - x_7*x_8
        + 2*x_8^2,
    -3*x_1*x_2 + 2*x_1*x_3 - 4*x_1*x_4 + x_1*x_5 + 2*x_1*x_6 - x_1*x_7 + 
        2*x_1*x_8 - 3*x_2^2 - x_2*x_3 + 3*x_2*x_4 + x_2*x_5 + 2*x_2*x_6 + 
        2*x_2*x_7 - x_2*x_8 + 2*x_3^2 + x_3*x_5 + 2*x_3*x_6 - 3*x_3*x_7 + 
        4*x_3*x_8 - x_4^2 - 3*x_4*x_6 + 2*x_4*x_8 + x_5*x_6 - x_5*x_7 + 
        3*x_5*x_8 - x_6*x_7 + x_7^2 - x_7*x_8 - 2*x_8^2,
    -2*x_1^2 - 2*x_1*x_2 - x_1*x_3 + 3*x_1*x_4 + x_1*x_5 + 2*x_1*x_7 - 
        2*x_1*x_8 + x_2*x_3 - 4*x_2*x_4 + x_2*x_5 + 5*x_2*x_6 + 4*x_2*x_8 + 
        x_3^2 - x_3*x_4 + x_3*x_5 + x_3*x_6 - x_3*x_7 + 7*x_3*x_8 - x_4^2 - 
        2*x_4*x_6 + x_4*x_7 + x_4*x_8 + x_5*x_6 - x_5*x_7 + x_5*x_8 - 
        2*x_7*x_8,
    2*x_1^2 - 2*x_1*x_2 - 5*x_1*x_3 + x_1*x_4 + x_1*x_6 + x_1*x_7 + x_2*x_3 - 
        x_2*x_4 + x_2*x_6 - x_2*x_7 + 2*x_2*x_8 + 2*x_3^2 - 2*x_3*x_4 + x_3*x_6
        - 2*x_3*x_7 + 3*x_3*x_8 - x_4^2 - x_4*x_5 + x_4*x_7 + x_4*x_8 - x_5^2 +
        x_5*x_6 + 2*x_5*x_8 + 2*x_6^2 - 2*x_6*x_7 - x_6*x_8 + x_7^2 - x_7*x_8 -
        2*x_8^2,
    -3*x_1^2 - 2*x_1*x_2 + x_2^2 + 4*x_2*x_3 + 3*x_3^2 - x_4^2 + x_4*x_5 - 
        x_4*x_6 + x_4*x_7 + 4*x_4*x_8 + x_5^2 - x_5*x_6 + 2*x_5*x_8 + x_6*x_7 -
        4*x_6*x_8 - 2*x_7*x_8 - x_8^2,
    -x_1^2 + x_1*x_3 - 4*x_1*x_4 + 2*x_1*x_5 - x_1*x_7 + x_2^2 + 3*x_2*x_3 + 
        3*x_2*x_4 - 3*x_2*x_5 + 2*x_2*x_7 - 2*x_2*x_8 + 2*x_3^2 + x_3*x_5 - 
        3*x_3*x_7 - 3*x_3*x_8 - x_4*x_6 + x_5^2 - x_5*x_6 - x_5*x_7 + 2*x_5*x_8
        + x_6*x_7 - 2*x_6*x_8 - x_7*x_8 + x_8^2,
    -2*x_1*x_6 - 4*x_1*x_8 - 2*x_2*x_4 - 3*x_2*x_5 + 3*x_2*x_6 + 3*x_2*x_7 - 
        3*x_3*x_4 + 2*x_3*x_5 - x_3*x_6 - 2*x_3*x_7 + 2*x_3*x_8 - x_4*x_5 - 
        x_4*x_6 + 2*x_5*x_8 - x_6*x_7,
    -2*x_1^2 - 2*x_1*x_2 - x_1*x_3 - x_1*x_4 - x_1*x_5 + 2*x_1*x_6 + 2*x_1*x_8 
        + x_2*x_3 + 2*x_2*x_4 - x_2*x_5 - 3*x_2*x_6 - 2*x_2*x_7 + x_3^2 - 
        3*x_3*x_4 - x_3*x_5 + x_3*x_6 - 3*x_3*x_7 - x_3*x_8 - x_4^2 - 2*x_4*x_6
        + x_4*x_7 + x_4*x_8 + x_5*x_6 - x_5*x_7 + x_5*x_8 - 2*x_7*x_8,
    -x_1^2 + x_1*x_2 - 4*x_1*x_3 + x_1*x_4 - 2*x_1*x_6 - 2*x_1*x_7 + 4*x_1*x_8 
        + 2*x_2^2 - x_2*x_3 + 2*x_2*x_4 - 2*x_2*x_5 - 2*x_2*x_6 - 3*x_2*x_7 - 
        3*x_2*x_8 - 3*x_3^2 - 4*x_3*x_4 - 3*x_3*x_5 - 2*x_3*x_6 + 3*x_3*x_7 - 
        x_4*x_5 + x_4*x_6 + x_4*x_7 - x_4*x_8 - x_5^2 + x_5*x_6 + x_5*x_7 - 
        2*x_5*x_8 - x_6*x_7 + 2*x_6*x_8 - x_7^2 + x_8^2,
    -4*x_1^2 - 4*x_1*x_2 - 2*x_1*x_3 + 2*x_2*x_3 + 2*x_3^2 - 2*x_4^2 + 
        2*x_4*x_5 - 2*x_4*x_6 + 2*x_4*x_7 + 2*x_4*x_8 + 2*x_5*x_6 - 2*x_5*x_7 -
        2*x_5*x_8 + 2*x_6*x_7 - 4*x_7*x_8,
    2*x_1*x_4 + 2*x_1*x_6 + 2*x_1*x_7 - 2*x_2*x_4 + 2*x_2*x_6 - 2*x_2*x_7 + 
        4*x_2*x_8 - 4*x_3*x_4 + 2*x_3*x_6 - 4*x_3*x_7 + 6*x_3*x_8,
    -x_1^2 + x_1*x_2 - 4*x_1*x_3 + 3*x_1*x_4 + 2*x_1*x_5 + 2*x_1*x_7 + 2*x_2^2 
        - x_2*x_3 - 2*x_2*x_4 - 3*x_2*x_7 + 3*x_2*x_8 - 3*x_3^2 + 2*x_3*x_4 - 
        x_3*x_5 + x_3*x_7 - 2*x_3*x_8 - x_4*x_5 + x_4*x_6 + x_4*x_7 - x_4*x_8 -
        x_5^2 + x_5*x_6 + x_5*x_7 - 2*x_5*x_8 - x_6*x_7 + 2*x_6*x_8 - x_7^2 + 
        x_8^2,
    -2*x_1*x_4 - x_1*x_5 + x_1*x_6 - x_1*x_7 + 2*x_1*x_8 + 3*x_2*x_4 - x_2*x_5 
        - 4*x_2*x_6 - x_2*x_7 - 2*x_2*x_8 - x_3*x_4 - x_3*x_5 - x_3*x_7 - 
        4*x_3*x_8 - 2*x_4^2 - x_4*x_5 + 2*x_4*x_6 + 2*x_4*x_7 - x_5^2 + x_5*x_7
        + x_5*x_8 - x_6*x_8 + 2*x_7^2 - 3*x_7*x_8 + 2*x_8^2,
    x_1^2 - x_1*x_2 + 4*x_1*x_3 + x_1*x_5 - 2*x_1*x_6 + x_1*x_7 - 6*x_1*x_8 + 
        4*x_2^2 + 6*x_2*x_3 - 3*x_2*x_4 - 2*x_2*x_5 + 3*x_2*x_6 + 4*x_2*x_7 + 
        x_2*x_8 - 3*x_3^2 + 2*x_3*x_4 + 3*x_3*x_5 - x_3*x_6 - x_3*x_7 - 
        2*x_3*x_8 + 2*x_4^2 + x_4*x_6 - 2*x_4*x_7 + 3*x_5^2 - 2*x_5*x_6 - 
        x_5*x_7 + x_5*x_8 - 2*x_6^2 - x_6*x_7 - 4*x_6*x_8 - x_7^2 - x_7*x_8 + 
        x_8^2,
    -2*x_1*x_2 + 10*x_1*x_3 - 3*x_1*x_4 + 3*x_1*x_5 - 2*x_1*x_6 - x_1*x_7 - 
        2*x_1*x_8 + 3*x_2^2 - 16*x_2*x_3 + x_2*x_4 - 2*x_2*x_5 + 3*x_2*x_6 + 
        4*x_2*x_7 - 2*x_2*x_8 + 5*x_3^2 + 3*x_3*x_4 + 2*x_3*x_5 - x_3*x_6 - 
        2*x_3*x_8 + x_4^2 + x_4*x_5 - 2*x_4*x_7 + x_4*x_8 + x_5*x_6 + 3*x_5*x_8
        + 2*x_6*x_7 + 6*x_6*x_8 + x_7^2 - x_7*x_8 + 6*x_8^2
];


// Equations for map rho from new model to X_ns^+(13)

new_rho_eqns := [-3*x_2 + 2*x_3, 2*x_1 - 3*x_2 + x_3, x_1 + x_2 + x_3];

// Diagonalised matrix of involution on new model

Diag := DiagonalMatrix([1,1,1,-1,-1,-1,-1,-1]);

